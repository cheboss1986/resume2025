name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/resume:${{ github.run_number }}
          docker build -t $IMAGE_URI .
          docker tag $IMAGE_URI ${{ steps.login-ecr.outputs.registry }}/resume:latest

      - name: Push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/resume:${{ github.run_number }}
          docker push $IMAGE_URI
          docker push ${{ steps.login-ecr.outputs.registry }}/resume:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH and deploy Docker container
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/resume:${{ github.run_number }}
            docker pull $IMAGE_URI
            docker rm -f resume || true
            docker run -d --name resume --restart unless-stopped -p 8080:5001 $IMAGE_URI
